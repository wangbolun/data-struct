package lcmtypes;

struct map_info_t
{
	int64_t utime;  						//时间
	int8_t currentLaneIndex;					//本车道的序号
	int8_t laneCount;						//此处共有多少车道
	int8_t roadDirection;						//0未知，1单向行驶，2双向多车道中线分隔，3双向单车道无中线分隔
	int8_t thisSegmentType;						//当前路段类型，不同路段以不同限高、限速划分，2高速公路4匝道5高速公路入口
	int8_t nextSegmentType;						//下一路段类型，不同路段以不同限高、限速划分
	float distance2NextSegment;					//到下一路段的距离
	float nextSegmentSpeedLimited;					//下一路段限速，单位公里每小时，为整数
	int8_t junctionType;						//路口属性0一般十字路口或丁字路口1单向道路入口2单向道路出口3单向道路出入口4为了便于编程连接关系的虚拟道路连接点5未定义
	int8_t turnType;						//转向灯类别 0直行1左转2右转
	float distance2Junction;					//到路口的距离
	float speedLimited;						//本路段限速，单位公里每小时，为整数
	float distance2LeftMarker;      				//距左侧车道线距离
	float distance2RightMarker;      				//距右侧车道线距离
	float distance2DecelerationStrip;				//距减速带距离

	int16_t specialPointCount;						//特殊点个数
        lcmtypes.map_special_point_t specialPoints[specialPointCount];			//特殊点信息

	int16_t boundaryCount;						//边界条数
        lcmtypes.map_road_boundary_t boundary[boundaryCount];	//边界信息

        lcmtypes.map_line_info_t frontLineInfo[4];					//相邻车道线信息
        lcmtypes.map_line_info_t backLineInfo[4];					//相邻车道线信息

        lcmtypes.map_lane_info_t frontLaneInfo[3];					//所有车道信息
        lcmtypes.map_lane_info_t backLaneInfo[3];					//所有车道信息

}
